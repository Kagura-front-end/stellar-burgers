import React, { FC, RefObject } from 'react';
import { Tab } from '@zlden/react-developer-burger-ui-components';
import type { TIngredient } from '@utils-types';

export type TabKey = 'bun' | 'sauce' | 'main';

export interface BurgerIngredientsUIProps {
  currentTab: TabKey;
  buns: TIngredient[];
  sauces: TIngredient[];
  mains: TIngredient[];
  titleBunRef: RefObject<HTMLHeadingElement>;
  titleSauceRef: RefObject<HTMLHeadingElement>;
  titleMainRef: RefObject<HTMLHeadingElement>;
  onTabClick: (t: TabKey) => void;
}

export const BurgerIngredientsUI: FC<BurgerIngredientsUIProps> = ({
  currentTab,
  buns,
  sauces,
  mains,
  titleBunRef,
  titleSauceRef,
  titleMainRef,
  onTabClick,
}) => (
  // Make sure to handle empty arrays
  <section className='pb-10'>
    <div className='pt-5 pb-10' style={{ display: 'flex', gap: 10 }}>
      <Tab value='bun' active={currentTab === 'bun'} onClick={() => onTabClick('bun')}>
        Булки
      </Tab>
      <Tab value='sauce' active={currentTab === 'sauce'} onClick={() => onTabClick('sauce')}>
        Соусы
      </Tab>
      <Tab value='main' active={currentTab === 'main'} onClick={() => onTabClick('main')}>
        Начинки
      </Tab>
    </div>

    <div className='scrollable-container' style={{ maxHeight: '60vh', overflowY: 'auto' }}>
      <h2 ref={titleBunRef} className='text text_type_main-medium mb-6'>
        Булки
      </h2>
      <div className='pl-4 pr-4 mb-10' style={{ display: 'flex', flexWrap: 'wrap', gap: 24 }}>
        {Array.isArray(buns) &&
          buns.map((item) => (
            <div key={item._id} className='ingredient-item'>
              {/* Render bun item */}
            </div>
          ))}
      </div>

      <h2 ref={titleSauceRef} className='text text_type_main-medium mb-6'>
        Соусы
      </h2>
      <div className='pl-4 pr-4 mb-10' style={{ display: 'flex', flexWrap: 'wrap', gap: 24 }}>
        {Array.isArray(sauces) &&
          sauces.map((item) => (
            <div key={item._id} className='ingredient-item'>
              {/* Render sauce item */}
            </div>
          ))}
      </div>

      <h2 ref={titleMainRef} className='text text_type_main-medium mb-6'>
        Начинки
      </h2>
      <div className='pl-4 pr-4 mb-10' style={{ display: 'flex', flexWrap: 'wrap', gap: 24 }}>
        {Array.isArray(mains) &&
          mains.map((item) => (
            <div key={item._id} className='ingredient-item'>
              {/* Render main item */}
            </div>
          ))}
      </div>
    </div>
  </section>
);

export default BurgerIngredientsUI;
